import{_ as s,o as e,c as a,R as i}from"./chunks/framework.BB5QA5cW.js";const g=JSON.parse('{"title":"SuperToolFFMPEG Documentation","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"supertools/ffmpeg/README.md","filePath":"supertools/ffmpeg/README.md","lastUpdated":1711179716000}'),t={name:"supertools/ffmpeg/README.md"},n=i(`<h1 id="supertoolffmpeg-documentation" tabindex="-1">SuperToolFFMPEG Documentation <a class="header-anchor" href="#supertoolffmpeg-documentation" aria-label="Permalink to &quot;SuperToolFFMPEG Documentation&quot;">​</a></h1><p><code>SuperToolFFMPEG</code> is a utility class designed to facilitate interaction with FFMPEG processes within Node.js applications. It serves as both the superclass and the utility class, enhancing itself with methods for managing FFMPEG processes and tracking progress.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>As a superclass, <code>SuperToolFFMPEG</code> provides a foundation for creating custom tool classes tailored to specific use cases. It encapsulates common functionality and logic related to FFMPEG processing, enabling developers to build upon this foundation to address their application&#39;s unique requirements.</p><p>The superclass pattern promotes code reuse and maintainability by abstracting away common functionality into a reusable component. By extending <code>SuperToolFFMPEG</code>, developers can create specialized subclasses that inherit its core features while adding customizations or extensions as needed.</p></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>To utilize the functionality provided by <code>SuperToolFFMPEG</code>, you can extend it directly to create your custom tool classes. In this case where you require properties from both the superclass (<code>SuperToolFFMPEG</code>) and the original <code>Tool</code> class, you need to add the <code>Tool</code> class as the first parameter of the superclass.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SuperToolFFMPEG </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@toolx/supertool-ffmpeg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Tool } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@toolx/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Define a class ToolName extending SuperToolFFMPEG</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ToolName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SuperToolFFMPEG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Tool) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Your implementation goes here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Instantiate ToolName and use its methods</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ToolName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>`,6),o=[n];function l(p,r,h,c,d,k){return e(),a("div",null,o)}const E=s(t,[["render",l]]);export{g as __pageData,E as default};
