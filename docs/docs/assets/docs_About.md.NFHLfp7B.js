import{_ as e,o,c as t,R as a}from"./chunks/framework.BB5QA5cW.js";const f=JSON.parse('{"title":"About ToolX","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/About.md","filePath":"docs/About.md","lastUpdated":1703684175000}'),i={name:"docs/About.md"},s=a('<h1 id="about-toolx" tabindex="-1">About ToolX <a class="header-anchor" href="#about-toolx" aria-label="Permalink to &quot;About ToolX&quot;">​</a></h1><p>ToolX is a comprehensive library designed to streamline file processing tasks through a variety of methods such as media compression, transformation, and more. It is structured around two core concepts: <code>Tool</code> and <code>Pipeline</code>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Tools in ToolX can be combined using the Pipeline feature, where the output of one tool becomes the input for the next. This enables complex workflows, such as transforming an image format, composing it into a spritesheet, and finally compressing it, to be handled efficiently and seamlessly.</p></div><hr><h1 id="list-of-features" tabindex="-1">List of Features <a class="header-anchor" href="#list-of-features" aria-label="Permalink to &quot;List of Features&quot;">​</a></h1><h2 id="🧩-modular-design" tabindex="-1">🧩 Modular Design <a class="header-anchor" href="#🧩-modular-design" aria-label="Permalink to &quot;🧩 Modular Design&quot;">​</a></h2><p>ToolX consists of various independent tools, each specialized in different aspects of file manipulation and processing. This modular approach allows users to choose and use specific functionalities as needed.</p><h2 id="🔗-pipeline-integration" tabindex="-1">🔗 Pipeline Integration <a class="header-anchor" href="#🔗-pipeline-integration" aria-label="Permalink to &quot;🔗 Pipeline Integration&quot;">​</a></h2><p>ToolX offers a &#39;Pipeline&#39; feature that enables users to chain multiple tools and processes together, streamlining complex workflows into a single, cohesive operation.</p><h2 id="🔧-extensibility" tabindex="-1">🔧 Extensibility <a class="header-anchor" href="#🔧-extensibility" aria-label="Permalink to &quot;🔧 Extensibility&quot;">​</a></h2><p>The library is designed to be easily extendable, allowing developers to create new tools that seamlessly integrate with the existing ones.</p><h2 id="🖥️-command-line-interface-cli-support" tabindex="-1">🖥️ Command-Line Interface (CLI) Support <a class="header-anchor" href="#🖥️-command-line-interface-cli-support" aria-label="Permalink to &quot;🖥️ Command-Line Interface (CLI) Support&quot;">​</a></h2><p>Many of the tools within ToolX can be used directly from the command line, facilitating integration into scripts and other automation processes.</p><h2 id="📚-comprehensive-documentation" tabindex="-1">📚 Comprehensive Documentation <a class="header-anchor" href="#📚-comprehensive-documentation" aria-label="Permalink to &quot;📚 Comprehensive Documentation&quot;">​</a></h2><p>ToolX is accompanied by thorough documentation, providing clear instructions and examples to help users understand and utilize its features effectively.</p><h2 id="💻-cross-platform-compatibility" tabindex="-1">💻 Cross-Platform Compatibility <a class="header-anchor" href="#💻-cross-platform-compatibility" aria-label="Permalink to &quot;💻 Cross-Platform Compatibility&quot;">​</a></h2><p>Designed to work across various operating systems, ToolX ensures a wide range of applicability.</p>',17),n=[s];function r(l,c,d,p,h,u){return o(),t("div",null,n)}const b=e(i,[["render",r]]);export{f as __pageData,b as default};
